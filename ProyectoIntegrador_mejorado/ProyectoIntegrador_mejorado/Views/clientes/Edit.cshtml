@model ProyectoIntegrador_mejorado.Models.clientes

@{
    ViewBag.Title = "Edit";
}

@*Titulo*@
<h2>Modificar</h2>

@*Script que invoca getProvince para desplegar la informacion en dopdownlist*@
<script>
    $(document).ready(function () {
        getProvincia();
    })
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-card">
        <div class="card-header">
            @*subtitulo*@
            <h4>Administrador de clientes</h4>
        </div>

        <div class="card-body cont">
            <div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.cedulaPK)

                <div class="form-group">
                    @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.apellido1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.apellido1, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.apellido1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.apellido2, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.apellido2, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.apellido2, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.telefono, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div>
                <div class="form-group">
                    @Html.LabelFor(model => model.provincia, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.provincia, Enumerable.Empty<SelectListItem>(), "-- Seleccione provincia --", new { @class = "form-control", onchange = "getCanton()" })
                        @Html.ValidationMessageFor(model => model.provincia, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.canton, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.canton, Enumerable.Empty<SelectListItem>(), "-- Seleccione cantón --", new { @class = "form-control", onchange = "getDistrict()" })
                        @Html.ValidationMessageFor(model => model.canton, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.distrito, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.distrito, Enumerable.Empty<SelectListItem>(), "-- Seleccione distrito --", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.distrito, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.correo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.correo, new { htmlAttributes = new { @class = "form-control", type = "email" } })
                        @Html.ValidationMessageFor(model => model.correo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.direccionDetallada, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.direccionDetallada, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.direccionDetallada, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            @*Botones de aceptar y cancelar *@
            <div class="form-actions no-color">
                <input type="submit" value="Aceptar" class="btn btn-success" /> &nbsp;
                <a href="~/clientes/Index" role="button" class="btn btn-danger"> Cancelar</a>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
